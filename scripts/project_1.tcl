#*****************************************************************************************
# Vivado (TM) v2024.1 (64-bit)
#
# project_1.tcl: Tcl script for re-creating project 'project_1'
#
# Generated by Vivado on Mon Feb 24 13:48:14 CET 2025
# IP Build 5075265 on Wed May 22 21:45:21 MDT 2024
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (project_1.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    "/home/pxdrom/Documents/vivado_projects/project_1/project_1.srcs/utils_1/imports/synth_1/design_1_wrapper.dcp"
#
# 3. The following remote source files that were added to the original project:-
#
#    "/home/pxdrom/Documents/nanorv32/hw/rtl/alu.v"
#    "/home/pxdrom/Documents/nanorv32/hw/rtl/compare.v"
#    "/home/pxdrom/Documents/nanorv32/hw/rtl/decoder.v"
#    "/home/pxdrom/Documents/nanorv32/hw/rtl/lsu.v"
#    "/home/pxdrom/Documents/nanorv32/hw/rtl/regfile.v"
#    "/home/pxdrom/Documents/nanorv32/hw/rtl/nano_rv32i.v"
#    "/home/pxdrom/Documents/nanorv32/coe/init_mem_2.coe"
#    "/home/pxdrom/Documents/nanorv32/coe/init_mem.coe"
#    "/home/pxdrom/Documents/nanorv32/constraints/Nexys-A7-100T-Master.xdc"
#    "/home/pxdrom/Documents/nanorv32/sim/tb/design_1_wrapper_tb.v"
#    "/home/pxdrom/Documents/nanorv32/sim/tb/alu_tb.v"
#    "/home/pxdrom/Documents/nanorv32/sim/tb/lsu_tb.v"
#    "/home/pxdrom/Documents/nanorv32/sim/tb/decoder_tb.v"
#    "/home/pxdrom/Documents/nanorv32/sim/tb/nano_rv32i_tb.v"
#    "/home/pxdrom/Documents/nanorv32/sim/tb/regfile_tb.v"
#    "/home/pxdrom/Documents/nanorv32/sim/g_sim_behav.wcfg"
#
#*****************************************************************************************

# Check file required for this script exists
proc checkRequiredFiles { origin_dir} {
  set status true
  set files [list \
 "[file normalize "$origin_dir/../../vivado_projects/project_1/project_1.srcs/utils_1/imports/synth_1/design_1_wrapper.dcp"]"\
  ]
  foreach ifile $files {
    if { ![file isfile $ifile] } {
      puts " Could not find local file $ifile "
      set status false
    }
  }

  set files [list \
 "[file normalize "$origin_dir/../hw/rtl/alu.v"]"\
 "[file normalize "$origin_dir/../hw/rtl/compare.v"]"\
 "[file normalize "$origin_dir/../hw/rtl/decoder.v"]"\
 "[file normalize "$origin_dir/../hw/rtl/lsu.v"]"\
 "[file normalize "$origin_dir/../hw/rtl/regfile.v"]"\
 "[file normalize "$origin_dir/../hw/rtl/nano_rv32i.v"]"\
 "[file normalize "$origin_dir/../coe/init_mem_2.coe"]"\
 "[file normalize "$origin_dir/../coe/init_mem.coe"]"\
 "[file normalize "$origin_dir/../constraints/Nexys-A7-100T-Master.xdc"]"\
 "[file normalize "$origin_dir/../sim/tb/design_1_wrapper_tb.v"]"\
 "[file normalize "$origin_dir/../sim/tb/alu_tb.v"]"\
 "[file normalize "$origin_dir/../sim/tb/lsu_tb.v"]"\
 "[file normalize "$origin_dir/../sim/tb/decoder_tb.v"]"\
 "[file normalize "$origin_dir/../sim/tb/nano_rv32i_tb.v"]"\
 "[file normalize "$origin_dir/../sim/tb/regfile_tb.v"]"\
 "[file normalize "$origin_dir/../sim/g_sim_behav.wcfg"]"\
  ]
  foreach ifile $files {
    if { ![file isfile $ifile] } {
      puts " Could not find remote file $ifile "
      set status false
    }
  }

  return $status
}
# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set _xil_proj_name_ "project_1"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name
}

variable script_file
set script_file "project_1.tcl"

# Help information for this script
proc print_help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--project_name <name>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--project_name <name>\] Create project with the specified name. Default"
  puts "                       name is the name of the project from where this"
  puts "                       script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < $::argc} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
      "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
      "--help"         { print_help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/../../vivado_projects/project_1"]"

# Check for paths and files needed for project creation
set validate_required 0
if { $validate_required } {
  if { [checkRequiredFiles $origin_dir] } {
    puts "Tcl file $script_file is valid. All files required for project creation is accesable. "
  } else {
    puts "Tcl file $script_file is not valid. Not all files required for project creation is accesable. "
    return
  }
}

# Create project
create_project ${_xil_proj_name_} ./${_xil_proj_name_} -part xc7a100tcsg324-1

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Reconstruct message rules
# None

# Set project properties
set obj [current_project]
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "enable_resource_estimation" -value "0" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "part" -value "xc7a100tcsg324-1" -objects $obj
set_property -name "revised_directory_structure" -value "1" -objects $obj
set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "simulator_language" -value "Mixed" -objects $obj
set_property -name "sim_compile_state" -value "1" -objects $obj
set_property -name "webtalk.activehdl_export_sim" -value "47" -objects $obj
set_property -name "webtalk.modelsim_export_sim" -value "47" -objects $obj
set_property -name "webtalk.questa_export_sim" -value "47" -objects $obj
set_property -name "webtalk.riviera_export_sim" -value "47" -objects $obj
set_property -name "webtalk.vcs_export_sim" -value "47" -objects $obj
set_property -name "webtalk.xcelium_export_sim" -value "3" -objects $obj
set_property -name "webtalk.xsim_export_sim" -value "47" -objects $obj
set_property -name "webtalk.xsim_launch_sim" -value "237" -objects $obj
set_property -name "xpm_libraries" -value "XPM_MEMORY" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 [file normalize "${origin_dir}/../hw/rtl/alu.v"] \
 [file normalize "${origin_dir}/../hw/rtl/compare.v"] \
 [file normalize "${origin_dir}/../hw/rtl/decoder.v"] \
 [file normalize "${origin_dir}/../hw/rtl/lsu.v"] \
 [file normalize "${origin_dir}/../hw/rtl/regfile.v"] \
 [file normalize "${origin_dir}/../hw/rtl/nano_rv32i.v"] \
 [file normalize "${origin_dir}/../coe/init_mem_2.coe"] \
 [file normalize "${origin_dir}/../coe/init_mem.coe"] \
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property -name "dataflow_viewer_settings" -value "min_width=16" -objects $obj
set_property -name "top" -value "design_1_wrapper" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/../constraints/Nexys-A7-100T-Master.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/../constraints/Nexys-A7-100T-Master.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]
set_property -name "target_part" -value "xc7a100tcsg324-1" -objects $obj

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
set files [list \
 [file normalize "${origin_dir}/../sim/tb/design_1_wrapper_tb.v"] \
 [file normalize "${origin_dir}/../sim/tb/alu_tb.v"] \
 [file normalize "${origin_dir}/../sim/tb/lsu_tb.v"] \
 [file normalize "${origin_dir}/../sim/tb/decoder_tb.v"] \
 [file normalize "${origin_dir}/../sim/tb/nano_rv32i_tb.v"] \
 [file normalize "${origin_dir}/../sim/tb/regfile_tb.v"] \
 [file normalize "${origin_dir}/../sim/g_sim_behav.wcfg"] \
]
add_files -norecurse -fileset $obj $files

# Set 'sim_1' fileset file properties for remote files
# None

# Set 'sim_1' fileset file properties for local files
# None

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property -name "top" -value "testbench_design_1" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj

# Set 'utils_1' fileset object
set obj [get_filesets utils_1]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/../../vivado_projects/project_1/project_1.srcs/utils_1/imports/synth_1/design_1_wrapper.dcp" ]\
]
set imported_files ""
foreach f $files {
  lappend imported_files [import_files -fileset utils_1 $f]
}

# Set 'utils_1' fileset file properties for remote files
# None

# Set 'utils_1' fileset file properties for local files
set file "synth_1/design_1_wrapper.dcp"
set file_obj [get_files -of_objects [get_filesets utils_1] [list "*$file"]]
set_property -name "netlist_only" -value "0" -objects $file_obj


# Set 'utils_1' fileset properties
set obj [get_filesets utils_1]


# Adding sources referenced in BDs, if not already added
if { [get_files [list alu.v]] == "" } {
  import_files -quiet -fileset sources_1 /home/pxdrom/Documents/nanorv32/hw/rtl/alu.v
}
if { [get_files [list compare.v]] == "" } {
  import_files -quiet -fileset sources_1 /home/pxdrom/Documents/nanorv32/hw/rtl/compare.v
}
if { [get_files [list decoder.v]] == "" } {
  import_files -quiet -fileset sources_1 /home/pxdrom/Documents/nanorv32/hw/rtl/decoder.v
}
if { [get_files [list lsu.v]] == "" } {
  import_files -quiet -fileset sources_1 /home/pxdrom/Documents/nanorv32/hw/rtl/lsu.v
}
if { [get_files [list regfile.v]] == "" } {
  import_files -quiet -fileset sources_1 /home/pxdrom/Documents/nanorv32/hw/rtl/regfile.v
}
if { [get_files [list nano_rv32i.v]] == "" } {
  import_files -quiet -fileset sources_1 /home/pxdrom/Documents/nanorv32/hw/rtl/nano_rv32i.v
}


# Proc to create BD design_1
proc cr_bd_design_1 { parentCell } {
# The design that will be created by this Tcl proc contains the following 
# module references:
# nano_rv32i



  # CHANGE DESIGN NAME HERE
  set design_name design_1

  common::send_gid_msg -ssname BD::TCL -id 2010 -severity "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:ip:blk_mem_gen:8.4\
  xilinx.com:ip:util_vector_logic:2.0\
  xilinx.com:ip:axi_gpio:2.0\
  xilinx.com:ip:xlconstant:1.1\
  "

   set list_ips_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2011 -severity "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2012 -severity "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  ##################################################################
  # CHECK Modules
  ##################################################################
  set bCheckModules 1
  if { $bCheckModules == 1 } {
     set list_check_mods "\ 
  nano_rv32i\
  "

   set list_mods_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2020 -severity "INFO" "Checking if the following modules exist in the project's sources: $list_check_mods ."

   foreach mod_vlnv $list_check_mods {
      if { [can_resolve_reference $mod_vlnv] == 0 } {
         lappend list_mods_missing $mod_vlnv
      }
   }

   if { $list_mods_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2021 -severity "ERROR" "The following module(s) are not found in the project: $list_mods_missing" }
      common::send_gid_msg -ssname BD::TCL -id 2022 -severity "INFO" "Please add source files for the missing module(s) above."
      set bCheckIPsPassed 0
   }
}

  if { $bCheckIPsPassed != 1 } {
    common::send_gid_msg -ssname BD::TCL -id 2023 -severity "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports

  # Create ports
  set clk_i_0 [ create_bd_port -dir I clk_i_0 ]
  set rst_n_i_0 [ create_bd_port -dir I rst_n_i_0 ]
  set clk_2 [ create_bd_port -dir I clk_2 ]
  set gpio_io_t_0 [ create_bd_port -dir O -from 15 -to 0 gpio_io_t_0 ]
  set gpio_io_o_0 [ create_bd_port -dir O -from 15 -to 0 gpio_io_o_0 ]

  # Create instance: nano_rv32i_0, and set properties
  set block_name nano_rv32i
  set block_cell_name nano_rv32i_0
  if { [catch {set nano_rv32i_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $nano_rv32i_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: blk_mem_gen_1, and set properties
  set blk_mem_gen_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:blk_mem_gen:8.4 blk_mem_gen_1 ]
  set_property -dict [list \
    CONFIG.Memory_Type {Single_Port_RAM} \
    CONFIG.use_bram_block {BRAM_Controller} \
  ] $blk_mem_gen_1


  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property -dict [list \
    CONFIG.C_OPERATION {not} \
    CONFIG.C_SIZE {1} \
  ] $util_vector_logic_0


  # Create instance: util_vector_logic_1, and set properties
  set util_vector_logic_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_1 ]
  set_property -dict [list \
    CONFIG.C_OPERATION {or} \
    CONFIG.C_SIZE {1} \
  ] $util_vector_logic_1


  # Create instance: axi_gpio_0, and set properties
  set axi_gpio_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 axi_gpio_0 ]
  set_property -dict [list \
    CONFIG.C_ALL_INPUTS {0} \
    CONFIG.C_ALL_OUTPUTS {0} \
    CONFIG.C_GPIO_WIDTH {16} \
    CONFIG.C_INTERRUPT_PRESENT {0} \
    CONFIG.C_IS_DUAL {0} \
    CONFIG.C_TRI_DEFAULT {0x00000000} \
  ] $axi_gpio_0


  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]
  set_property -dict [list \
    CONFIG.CONST_VAL {15} \
    CONFIG.CONST_WIDTH {4} \
  ] $xlconstant_0


  # Create instance: blk_mem_gen_0, and set properties
  set blk_mem_gen_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:blk_mem_gen:8.4 blk_mem_gen_0 ]
  set_property -dict [list \
    CONFIG.Coe_File {/home/pxdrom/Documents/nanorv32/coe/init_mem.coe} \
    CONFIG.Load_Init_File {true} \
    CONFIG.Memory_Type {Single_Port_ROM} \
    CONFIG.Port_A_Write_Rate {0} \
    CONFIG.use_bram_block {BRAM_Controller} \
  ] $blk_mem_gen_0


  # Create instance: xlconstant_1, and set properties
  set xlconstant_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_1 ]
  set_property -dict [list \
    CONFIG.CONST_VAL {1084} \
    CONFIG.CONST_WIDTH {16} \
  ] $xlconstant_1


  # Create instance: xlconstant_2, and set properties
  set xlconstant_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_2 ]
  set_property -dict [list \
    CONFIG.CONST_VAL {1} \
    CONFIG.CONST_WIDTH {1} \
  ] $xlconstant_2


  # Create port connections
  connect_bd_net -net axi_gpio_0_gpio_io_o [get_bd_pins axi_gpio_0/gpio_io_o] [get_bd_ports gpio_io_o_0]
  connect_bd_net -net axi_gpio_0_gpio_io_t [get_bd_pins axi_gpio_0/gpio_io_t] [get_bd_ports gpio_io_t_0]
  connect_bd_net -net axi_gpio_0_s_axi_arready [get_bd_pins axi_gpio_0/s_axi_arready] [get_bd_pins nano_rv32i_0/s_axi_arready_i]
  connect_bd_net -net axi_gpio_0_s_axi_awready [get_bd_pins axi_gpio_0/s_axi_awready] [get_bd_pins nano_rv32i_0/s_axi_awready_i]
  connect_bd_net -net axi_gpio_0_s_axi_bvalid [get_bd_pins axi_gpio_0/s_axi_bvalid] [get_bd_pins nano_rv32i_0/s_axi_bvalid_i]
  connect_bd_net -net axi_gpio_0_s_axi_rdata [get_bd_pins axi_gpio_0/s_axi_rdata] [get_bd_pins nano_rv32i_0/s_axi_rdata_i]
  connect_bd_net -net axi_gpio_0_s_axi_rvalid [get_bd_pins axi_gpio_0/s_axi_rvalid] [get_bd_pins nano_rv32i_0/s_axi_rvalid_i]
  connect_bd_net -net axi_gpio_0_s_axi_wready [get_bd_pins axi_gpio_0/s_axi_wready] [get_bd_pins nano_rv32i_0/s_axi_wready_i]
  connect_bd_net -net blk_mem_gen_0_douta [get_bd_pins blk_mem_gen_0/douta] [get_bd_pins nano_rv32i_0/i_data_i]
  connect_bd_net -net blk_mem_gen_0_rsta_busy [get_bd_pins blk_mem_gen_0/rsta_busy] [get_bd_pins util_vector_logic_1/Op2]
  connect_bd_net -net blk_mem_gen_1_douta [get_bd_pins blk_mem_gen_1/douta] [get_bd_pins nano_rv32i_0/d_data_i]
  connect_bd_net -net blk_mem_gen_1_rsta_busy [get_bd_pins blk_mem_gen_1/rsta_busy] [get_bd_pins util_vector_logic_1/Op1]
  connect_bd_net -net clk_i_0_1 [get_bd_ports clk_i_0] [get_bd_pins blk_mem_gen_1/clka] [get_bd_pins axi_gpio_0/s_axi_aclk] [get_bd_pins blk_mem_gen_0/clka] [get_bd_pins nano_rv32i_0/clk_i]
  connect_bd_net -net nano_rv32i_0_d_addr_o [get_bd_pins nano_rv32i_0/d_addr_o] [get_bd_pins blk_mem_gen_1/addra]
  connect_bd_net -net nano_rv32i_0_d_data_o [get_bd_pins nano_rv32i_0/d_data_o] [get_bd_pins blk_mem_gen_1/dina]
  connect_bd_net -net nano_rv32i_0_d_we_o [get_bd_pins nano_rv32i_0/d_we_o] [get_bd_pins blk_mem_gen_1/wea]
  connect_bd_net -net nano_rv32i_0_i_addr_o [get_bd_pins nano_rv32i_0/i_addr_o] [get_bd_pins blk_mem_gen_0/addra]
  connect_bd_net -net nano_rv32i_0_i_rd_o [get_bd_pins nano_rv32i_0/i_rd_o] [get_bd_pins blk_mem_gen_0/ena]
  connect_bd_net -net nano_rv32i_0_s_axi_araddr_o [get_bd_pins nano_rv32i_0/s_axi_araddr_o] [get_bd_pins axi_gpio_0/s_axi_araddr]
  connect_bd_net -net nano_rv32i_0_s_axi_arvalid_o [get_bd_pins nano_rv32i_0/s_axi_arvalid_o] [get_bd_pins axi_gpio_0/s_axi_arvalid]
  connect_bd_net -net nano_rv32i_0_s_axi_awaddr_o [get_bd_pins nano_rv32i_0/s_axi_awaddr_o] [get_bd_pins axi_gpio_0/s_axi_awaddr]
  connect_bd_net -net nano_rv32i_0_s_axi_awvalid_o [get_bd_pins nano_rv32i_0/s_axi_awvalid_o] [get_bd_pins axi_gpio_0/s_axi_awvalid]
  connect_bd_net -net nano_rv32i_0_s_axi_bready_o [get_bd_pins nano_rv32i_0/s_axi_bready_o] [get_bd_pins axi_gpio_0/s_axi_bready]
  connect_bd_net -net nano_rv32i_0_s_axi_rready_o [get_bd_pins nano_rv32i_0/s_axi_rready_o] [get_bd_pins axi_gpio_0/s_axi_rready]
  connect_bd_net -net nano_rv32i_0_s_axi_wdata_o [get_bd_pins nano_rv32i_0/s_axi_wdata_o] [get_bd_pins axi_gpio_0/s_axi_wdata]
  connect_bd_net -net nano_rv32i_0_s_axi_wvalid_o [get_bd_pins nano_rv32i_0/s_axi_wvalid_o] [get_bd_pins axi_gpio_0/s_axi_wvalid]
  connect_bd_net -net rst_n_i_0_1 [get_bd_ports rst_n_i_0] [get_bd_pins util_vector_logic_0/Op1] [get_bd_pins axi_gpio_0/s_axi_aresetn] [get_bd_pins nano_rv32i_0/rst_n_i]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins util_vector_logic_0/Res] [get_bd_pins blk_mem_gen_1/rsta] [get_bd_pins blk_mem_gen_0/rsta]
  connect_bd_net -net util_vector_logic_1_Res [get_bd_pins util_vector_logic_1/Res] [get_bd_pins nano_rv32i_0/rsta_busy_i]
  connect_bd_net -net xlconstant_0_dout [get_bd_pins xlconstant_0/dout] [get_bd_pins axi_gpio_0/s_axi_wstrb]
  connect_bd_net -net xlconstant_1_dout [get_bd_pins xlconstant_1/dout] [get_bd_pins axi_gpio_0/gpio_io_i]
  connect_bd_net -net xlconstant_2_dout [get_bd_pins xlconstant_2/dout] [get_bd_pins blk_mem_gen_1/ena]

  # Create address segments

  # Perform GUI Layout
  regenerate_bd_layout -layout_string {
   "ActiveEmotionalView":"Default View",
   "Default View_ScaleFactor":"0.963612",
   "Default View_TopLeft":"149,277",
   "ExpandedHierarchyInLayout":"",
   "PinnedBlocks":"",
   "guistr":"# # String gsaved with Nlview 7.7.1 2023-07-26 3bc4126617 VDI=43 GEI=38 GUI=JA:21.0 TLS
#  -string -flagsOSRD
preplace port port-id_clk_i_0 -pg 1 -lvl 0 -x 0 -y 490 -defaultsOSRD
preplace port port-id_rst_n_i_0 -pg 1 -lvl 0 -x 0 -y 710 -defaultsOSRD
preplace port port-id_clk_2 -pg 1 -lvl 0 -x 0 -y 810 -defaultsOSRD
preplace portBus gpio_io_t_0 -pg 1 -lvl 6 -x 1940 -y 330 -defaultsOSRD
preplace portBus gpio_io_o_0 -pg 1 -lvl 6 -x 1940 -y 360 -defaultsOSRD
preplace inst nano_rv32i_0 -pg 1 -lvl 4 -x 1230 -y 220 -defaultsOSRD
preplace inst blk_mem_gen_1 -pg 1 -lvl 2 -x 490 -y 400 -defaultsOSRD
preplace inst util_vector_logic_0 -pg 1 -lvl 1 -x 170 -y 710 -defaultsOSRD
preplace inst util_vector_logic_1 -pg 1 -lvl 3 -x 810 -y 200 -defaultsOSRD
preplace inst axi_gpio_0 -pg 1 -lvl 5 -x 1730 -y 410 -defaultsOSRD
preplace inst xlconstant_0 -pg 1 -lvl 4 -x 1230 -y 530 -defaultsOSRD
preplace inst blk_mem_gen_0 -pg 1 -lvl 2 -x 490 -y 660 -defaultsOSRD
preplace inst xlconstant_1 -pg 1 -lvl 5 -x 1730 -y 760 -defaultsOSRD
preplace inst xlconstant_2 -pg 1 -lvl 1 -x 170 -y 430 -defaultsOSRD
preplace netloc axi_gpio_0_gpio_io_o 1 5 1 1910J 360n
preplace netloc axi_gpio_0_gpio_io_t 1 5 1 1900J 330n
preplace netloc axi_gpio_0_s_axi_arready 1 3 2 1010 30 1550J
preplace netloc axi_gpio_0_s_axi_awready 1 3 2 1050 410 1490
preplace netloc axi_gpio_0_s_axi_bvalid 1 3 2 1040 420 1540J
preplace netloc axi_gpio_0_s_axi_rdata 1 3 2 1030 430 1550J
preplace netloc axi_gpio_0_s_axi_rvalid 1 3 2 1020 440 1470J
preplace netloc axi_gpio_0_s_axi_wready 1 3 2 1000 450 1460J
preplace netloc blk_mem_gen_0_douta 1 1 3 340 260 660J 270 960
preplace netloc blk_mem_gen_0_rsta_busy 1 2 1 650 210n
preplace netloc blk_mem_gen_1_douta 1 1 3 370 270 620J 280 990
preplace netloc blk_mem_gen_1_rsta_busy 1 2 1 610 190n
preplace netloc clk_i_0_1 1 0 5 NJ 490 320 250 630J 290 980 470 1450J
preplace netloc nano_rv32i_0_d_addr_o 1 1 4 360 530 660J 460 NJ 460 1410
preplace netloc nano_rv32i_0_d_data_o 1 1 4 330 10 NJ 10 NJ 10 1420
preplace netloc nano_rv32i_0_d_we_o 1 1 4 350 20 NJ 20 NJ 20 1540
preplace netloc nano_rv32i_0_i_addr_o 1 1 4 350 540 NJ 540 960J 590 1440
preplace netloc nano_rv32i_0_i_rd_o 1 1 4 370 550 610J 600 NJ 600 1430
preplace netloc nano_rv32i_0_s_axi_araddr_o 1 4 1 1470 260n
preplace netloc nano_rv32i_0_s_axi_arvalid_o 1 4 1 1470 300n
preplace netloc nano_rv32i_0_s_axi_awaddr_o 1 4 1 1540 210n
preplace netloc nano_rv32i_0_s_axi_awvalid_o 1 4 1 1530 230n
preplace netloc nano_rv32i_0_s_axi_bready_o 1 4 1 1500 350n
preplace netloc nano_rv32i_0_s_axi_rready_o 1 4 1 1510 330n
preplace netloc nano_rv32i_0_s_axi_wdata_o 1 4 1 1520 250n
preplace netloc nano_rv32i_0_s_axi_wvalid_o 1 4 1 1480 270n
preplace netloc rst_n_i_0_1 1 0 5 20 240 NJ 240 640J 300 970 610 1550
preplace netloc util_vector_logic_0_Res 1 1 1 330 450n
preplace netloc util_vector_logic_1_Res 1 3 1 N 200
preplace netloc xlconstant_0_dout 1 4 1 1550J 520n
preplace netloc xlconstant_1_dout 1 5 1 1890 400n
preplace netloc xlconstant_2_dout 1 1 1 NJ 430
levelinfo -pg 1 0 170 490 810 1230 1730 1940
pagesize -pg 1 -db -bbox -sgen -120 0 2400 1230
"
}

  # Restore current instance
  current_bd_instance $oldCurInst

  validate_bd_design
  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_design_1()

cr_bd_design_1 ""
set_property REGISTERED_WITH_MANAGER "1" [get_files design_1.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files design_1.bd ] 

#call make_wrapper to create wrapper files
if { [get_property IS_LOCKED [ get_files -norecurse [list design_1.bd]] ] == 1  } {
  import_files -fileset sources_1 [file normalize "${origin_dir}/../../vivado_projects/project_1/project_1.gen/sources_1/bd/design_1/hdl/design_1_wrapper.v" ]
} else {
  set wrapper_path [make_wrapper -fileset sources_1 -files [ get_files -norecurse [list design_1.bd]] -top]
  add_files -norecurse -fileset sources_1 $wrapper_path
}


set idrFlowPropertiesConstraints ""
catch {
 set idrFlowPropertiesConstraints [get_param runs.disableIDRFlowPropertyConstraints]
 set_param runs.disableIDRFlowPropertyConstraints 1
}

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
    create_run -name synth_1 -part xc7a100tcsg324-1 -flow {Vivado Synthesis 2024} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2024" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1
}
set obj [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs synth_1]
set_property -name "part" -value "xc7a100tcsg324-1" -objects $obj
set_property -name "incremental_checkpoint" -value "$proj_dir/${_xil_proj_name_}.srcs/utils_1/imports/synth_1/design_1_wrapper.dcp" -objects $obj
set_property -name "auto_incremental_checkpoint" -value "1" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
    create_run -name impl_1 -part xc7a100tcsg324-1 -flow {Vivado Implementation 2024} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
  set_property flow "Vivado Implementation 2024" [get_runs impl_1]
}
set obj [get_runs impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1]
set_property -name "part" -value "xc7a100tcsg324-1" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# set the current impl run
current_run -implementation [get_runs impl_1]
catch {
 if { $idrFlowPropertiesConstraints != {} } {
   set_param runs.disableIDRFlowPropertyConstraints $idrFlowPropertiesConstraints
 }
}

puts "INFO: Project created:${_xil_proj_name_}"
# Create 'drc_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "drc_1" ] ] ""]} {
create_dashboard_gadget -name {drc_1} -type drc
}
set obj [get_dashboard_gadgets [ list "drc_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_drc_0" -objects $obj

# Create 'methodology_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "methodology_1" ] ] ""]} {
create_dashboard_gadget -name {methodology_1} -type methodology
}
set obj [get_dashboard_gadgets [ list "methodology_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_methodology_0" -objects $obj

# Create 'power_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "power_1" ] ] ""]} {
create_dashboard_gadget -name {power_1} -type power
}
set obj [get_dashboard_gadgets [ list "power_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_power_0" -objects $obj

# Create 'timing_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "timing_1" ] ] ""]} {
create_dashboard_gadget -name {timing_1} -type timing
}
set obj [get_dashboard_gadgets [ list "timing_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_timing_summary_0" -objects $obj

# Create 'utilization_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_1" ] ] ""]} {
create_dashboard_gadget -name {utilization_1} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_1" ] ]
set_property -name "reports" -value "synth_1#synth_1_synth_report_utilization_0" -objects $obj
set_property -name "run.step" -value "synth_design" -objects $obj
set_property -name "run.type" -value "synthesis" -objects $obj

# Create 'utilization_2' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_2" ] ] ""]} {
create_dashboard_gadget -name {utilization_2} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_2" ] ]
set_property -name "reports" -value "impl_1#impl_1_place_report_utilization_0" -objects $obj

move_dashboard_gadget -name {utilization_1} -row 0 -col 0
move_dashboard_gadget -name {power_1} -row 1 -col 0
move_dashboard_gadget -name {drc_1} -row 2 -col 0
move_dashboard_gadget -name {timing_1} -row 0 -col 1
move_dashboard_gadget -name {utilization_2} -row 1 -col 1
move_dashboard_gadget -name {methodology_1} -row 2 -col 1
